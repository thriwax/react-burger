{"ast":null,"code":"var _jsxFileName = \"/Users/thriwax/react-burger/src/components/BurgerIngredients/BurgerIngredients.jsx\";\nimport React from \"react\";\nimport IngredientCard from \"../IngredientCard/IngredientCard\";\nimport { data } from \"../../utils/data.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst buns = data.filter(item => item.type === 'bun').map(bunsObj => {\n  return {\n    bunsObj\n  };\n});\nconsole.log(buns);\nconst sauce = data.filter(item => item.type === 'sauce');\nconst mains = data.filter(item => item.type === 'main');\nconst BurgerIngredients = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text text_type_main-large\",\n      children: \"\\u0421\\u043E\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0431\\u0443\\u0440\\u0433\\u0435\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text text_type_main-medium\",\n      children: \"\\u0411\\u0443\\u043B\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), buns.map(obj => {\n      return /*#__PURE__*/_jsxDEV(IngredientCard, {\n        ingredient: obj\n      }, obj._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text text_type_main-medium\",\n      children: \"\\u0421\\u043E\\u0443\\u0441\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), sauce.map(obj => {\n      return /*#__PURE__*/_jsxDEV(IngredientCard, {\n        ingredient: obj\n      }, obj._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text text_type_main-medium\",\n      children: \"\\u041D\\u0430\\u0447\\u0438\\u043D\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), mains.map(obj => {\n      return /*#__PURE__*/_jsxDEV(IngredientCard, {\n        ingredient: obj\n      }, obj._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 20\n      }, this);\n    })]\n  }, void 0, true);\n};\n_c = BurgerIngredients;\nexport default BurgerIngredients;\nvar _c;\n$RefreshReg$(_c, \"BurgerIngredients\");","map":{"version":3,"names":["React","IngredientCard","data","buns","filter","item","type","map","bunsObj","console","log","sauce","mains","BurgerIngredients","obj","_id"],"sources":["/Users/thriwax/react-burger/src/components/BurgerIngredients/BurgerIngredients.jsx"],"sourcesContent":["import React from \"react\";\nimport IngredientCard from \"../IngredientCard/IngredientCard\";\nimport { data } from \"../../utils/data.js\";\n\n\n\nconst buns = data.filter((item) => item.type === 'bun').map((bunsObj) => {return {bunsObj}});\nconsole.log(buns)\nconst sauce = data.filter((item) => item.type === 'sauce');\nconst mains = data.filter((item) => item.type === 'main');\n\n\n\nconst BurgerIngredients = () => {\n\n    return (\n        <>\n            <p className=\"text text_type_main-large\">Соберите бургер</p>\n            <p className=\"text text_type_main-medium\">Булки</p>\n            {buns.map((obj) => {\n            return <IngredientCard key={obj._id} ingredient={obj} />;\n            })}\n            <p className=\"text text_type_main-medium\">Соусы</p>\n            {sauce.map((obj) => {\n            return <IngredientCard key={obj._id} ingredient={obj} />;\n            })}\n            <p className=\"text text_type_main-medium\">Начинки</p>\n            {mains.map((obj) => {\n            return <IngredientCard key={obj._id} ingredient={obj} />;\n            })}\n        </>\n    )\n}\n\nexport default BurgerIngredients;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,SAASC,IAAI,QAAQ,qBAAqB;AAAC;AAAA;AAI3C,MAAMC,IAAI,GAAGD,IAAI,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,KAAK,CAAC,CAACC,GAAG,CAAEC,OAAO,IAAK;EAAC,OAAO;IAACA;EAAO,CAAC;AAAA,CAAC,CAAC;AAC5FC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;AACjB,MAAMQ,KAAK,GAAGT,IAAI,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC;AAC1D,MAAMM,KAAK,GAAGV,IAAI,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,MAAM,CAAC;AAIzD,MAAMO,iBAAiB,GAAG,MAAM;EAE5B,oBACI;IAAA,wBACI;MAAG,SAAS,EAAC,2BAA2B;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAI,eAC5D;MAAG,SAAS,EAAC,4BAA4B;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAI,EAClDV,IAAI,CAACI,GAAG,CAAEO,GAAG,IAAK;MACnB,oBAAO,QAAC,cAAc;QAAe,UAAU,EAAEA;MAAI,GAAzBA,GAAG,CAACC,GAAG;QAAA;QAAA;QAAA;MAAA,QAAqB;IACxD,CAAC,CAAC,eACF;MAAG,SAAS,EAAC,4BAA4B;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAI,EAClDJ,KAAK,CAACJ,GAAG,CAAEO,GAAG,IAAK;MACpB,oBAAO,QAAC,cAAc;QAAe,UAAU,EAAEA;MAAI,GAAzBA,GAAG,CAACC,GAAG;QAAA;QAAA;QAAA;MAAA,QAAqB;IACxD,CAAC,CAAC,eACF;MAAG,SAAS,EAAC,4BAA4B;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAI,EACpDH,KAAK,CAACL,GAAG,CAAEO,GAAG,IAAK;MACpB,oBAAO,QAAC,cAAc;QAAe,UAAU,EAAEA;MAAI,GAAzBA,GAAG,CAACC,GAAG;QAAA;QAAA;QAAA;MAAA,QAAqB;IACxD,CAAC,CAAC;EAAA,gBACH;AAEX,CAAC;AAAA,KAnBKF,iBAAiB;AAqBvB,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}