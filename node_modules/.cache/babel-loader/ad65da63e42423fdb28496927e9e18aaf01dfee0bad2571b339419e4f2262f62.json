{"ast":null,"code":"var _jsxFileName = \"/Users/thriwax/react-burger/src/components/BurgerIngredients/BurgerIngredients.jsx\";\nimport React from \"react\";\nimport IngredientCard from \"../IngredientCard/IngredientCard\";\nimport { data } from \"../../utils/data.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst buns = [{\n  bunsImage,\n  bunsName,\n  bunsPrice\n}];\nconsole.log(buns);\nconst sauce = [{\n  sauceImage,\n  sauceName,\n  saucePrice\n}];\nconsole.log(sauce);\nconst mains = [{\n  mainsImage,\n  mainsName,\n  mainsPrice\n}];\nconsole.log(mains);\nconst bunsImage = data.filter(item => item.type === 'bun').map(item => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: item.image\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 72\n}, this));\nconst bunsName = data.filter(item => item.type === 'bun').map(item => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: item.name\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 71\n}, this));\nconst bunsPrice = data.filter(item => item.type === 'bun').map(item => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: item.price\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 72\n}, this));\nconst sauceImage = data.filter(item => item.type === 'sauce').map(item => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: item.image\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 75\n}, this));\nconst sauceName = data.filter(item => item.type === 'sauce').map(item => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: item.name\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 74\n}, this));\nconst saucePrice = data.filter(item => item.type === 'sauce').map(item => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: item.price\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 75\n}, this));\nconst mainsImage = data.filter(item => item.type === 'main').map(item => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: item.image\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 74\n}, this));\n;\nconst mainsName = data.filter(item => item.type === 'main').map(item => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: item.name\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 73\n}, this));\nconst mainsPrice = data.filter(item => item.type === 'main').map(item => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: item.price\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 74\n}, this));\nconst BurgerIngredients = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text text_type_main-medium\",\n      children: \"\\u0421\\u043E\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0431\\u0443\\u0440\\u0433\\u0435\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = BurgerIngredients;\nexport default BurgerIngredients;\nvar _c;\n$RefreshReg$(_c, \"BurgerIngredients\");","map":{"version":3,"names":["React","IngredientCard","data","buns","bunsImage","bunsName","bunsPrice","console","log","sauce","sauceImage","sauceName","saucePrice","mains","mainsImage","mainsName","mainsPrice","filter","item","type","map","image","name","price","BurgerIngredients"],"sources":["/Users/thriwax/react-burger/src/components/BurgerIngredients/BurgerIngredients.jsx"],"sourcesContent":["import React from \"react\";\nimport IngredientCard from \"../IngredientCard/IngredientCard\";\nimport { data } from \"../../utils/data.js\";\n\nconst buns = [{ bunsImage, bunsName, bunsPrice }]\nconsole.log(buns)\nconst sauce = [{ sauceImage, sauceName, saucePrice }]\nconsole.log(sauce)\nconst mains = [{ mainsImage, mainsName, mainsPrice }]\nconsole.log(mains)\n\nconst bunsImage = data.filter((item) => item.type === 'bun').map(item=><span>{item.image}</span>);\nconst bunsName = data.filter((item) => item.type === 'bun').map(item=><span>{item.name}</span>);\nconst bunsPrice = data.filter((item) => item.type === 'bun').map(item=><span>{item.price}</span>);\n\nconst sauceImage = data.filter((item) => item.type === 'sauce').map(item=><span>{item.image}</span>);\nconst sauceName = data.filter((item) => item.type === 'sauce').map(item=><span>{item.name}</span>);\nconst saucePrice = data.filter((item) => item.type === 'sauce').map(item=><span>{item.price}</span>);\n\n\n\nconst mainsImage = data.filter((item) => item.type === 'main').map(item=><span>{item.image}</span>);;\nconst mainsName = data.filter((item) => item.type === 'main').map(item=><span>{item.name}</span>);\nconst mainsPrice = data.filter((item) => item.type === 'main').map(item=><span>{item.price}</span>);\n\n\nconst BurgerIngredients = () => {\n\n    return (\n        <>\n            <p className=\"text text_type_main-medium\">Соберите бургер</p>\n\n        </>\n    )\n}\n\nexport default BurgerIngredients;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}