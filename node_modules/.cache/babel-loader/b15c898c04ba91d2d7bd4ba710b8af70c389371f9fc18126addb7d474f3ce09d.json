{"ast":null,"code":"var _jsxFileName = \"/Users/thriwax/react-burger/src/components/BurgerIngredients/BurgerIngredients.jsx\";\nimport React from \"react\";\nimport IngredientCard from \"../IngredientCard/IngredientCard\";\nimport { data } from \"../../utils/data.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BurgerIngredients = data => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ingredients-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text text_type_main-large\",\n      children: \"\\u0421\\u043E\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0431\\u0443\\u0440\\u0433\\u0435\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text text_type_main-medium\",\n      children: \"\\u0411\\u0443\\u043B\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IngredientCard, {\n      name: data.filter(item => item.type === 'sauce').map(item => {\n        item.name;\n      }),\n      image: data.filter(item => item.type === 'sauce').map(item => {\n        item.image;\n      }),\n      price: data.filter(item => item.type === 'sauce').map(item => {\n        item.price;\n      })\n    }, data.filter(item => item.type === 'sauce').map(item => {\n      item._id;\n    }), false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text text_type_main-medium\",\n      children: \"\\u0421\\u043E\\u0443\\u0441\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IngredientCard, {\n      name: sauce.name,\n      image: sauce.image,\n      price: sauce.price\n    }, sauce._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text text_type_main-medium\",\n      children: \"\\u041D\\u0430\\u0447\\u0438\\u043D\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IngredientCard, {\n      name: mains.name,\n      image: mains.image,\n      price: mains.price\n    }, mains._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = BurgerIngredients;\nexport default BurgerIngredients;\nvar _c;\n$RefreshReg$(_c, \"BurgerIngredients\");","map":{"version":3,"names":["React","IngredientCard","data","BurgerIngredients","filter","item","type","map","name","image","price","_id","sauce","mains"],"sources":["/Users/thriwax/react-burger/src/components/BurgerIngredients/BurgerIngredients.jsx"],"sourcesContent":["import React from \"react\";\nimport IngredientCard from \"../IngredientCard/IngredientCard\";\nimport { data } from \"../../utils/data.js\";\n\n\n\nconst BurgerIngredients = (data) => {\n\n    return (\n        <div className=\"ingredients-container\">\n            <p className=\"text text_type_main-large\">Соберите бургер</p>\n            <p className=\"text text_type_main-medium\">Булки</p>\n            <IngredientCard \n            key={data.filter(item => item.type === 'sauce').map(item=>{item._id})} \n            name={data.filter(item => item.type === 'sauce').map(item=>{item.name})} \n            image={data.filter(item => item.type === 'sauce').map(item=>{item.image})}\n            price={data.filter(item => item.type === 'sauce').map(item=>{item.price})}\n            />\n            <p className=\"text text_type_main-medium\">Соусы</p>\n            <IngredientCard key={sauce._id} name={sauce.name} image={sauce.image} price={sauce.price}/>\n            <p className=\"text text_type_main-medium\">Начинки</p>\n            <IngredientCard key={mains._id} name={mains.name} image={mains.image} price={mains.price}/>\n        </div>\n    )\n}\n\nexport default BurgerIngredients;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,SAASC,IAAI,QAAQ,qBAAqB;AAAC;AAI3C,MAAMC,iBAAiB,GAAID,IAAI,IAAK;EAEhC,oBACI;IAAK,SAAS,EAAC,uBAAuB;IAAA,wBAClC;MAAG,SAAS,EAAC,2BAA2B;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAI,eAC5D;MAAG,SAAS,EAAC,4BAA4B;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAI,eACnD,QAAC,cAAc;MAEf,IAAI,EAAEA,IAAI,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC,CAACC,GAAG,CAACF,IAAI,IAAE;QAACA,IAAI,CAACG,IAAI;MAAA,CAAC,CAAE;MACxE,KAAK,EAAEN,IAAI,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC,CAACC,GAAG,CAACF,IAAI,IAAE;QAACA,IAAI,CAACI,KAAK;MAAA,CAAC,CAAE;MAC1E,KAAK,EAAEP,IAAI,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC,CAACC,GAAG,CAACF,IAAI,IAAE;QAACA,IAAI,CAACK,KAAK;MAAA,CAAC;IAAE,GAHrER,IAAI,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC,CAACC,GAAG,CAACF,IAAI,IAAE;MAACA,IAAI,CAACM,GAAG;IAAA,CAAC,CAAC;MAAA;MAAA;MAAA;IAAA,QAInE,eACF;MAAG,SAAS,EAAC,4BAA4B;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAI,eACnD,QAAC,cAAc;MAAiB,IAAI,EAAEC,KAAK,CAACJ,IAAK;MAAC,KAAK,EAAEI,KAAK,CAACH,KAAM;MAAC,KAAK,EAAEG,KAAK,CAACF;IAAM,GAApEE,KAAK,CAACD,GAAG;MAAA;MAAA;MAAA;IAAA,QAA6D,eAC3F;MAAG,SAAS,EAAC,4BAA4B;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAI,eACrD,QAAC,cAAc;MAAiB,IAAI,EAAEE,KAAK,CAACL,IAAK;MAAC,KAAK,EAAEK,KAAK,CAACJ,KAAM;MAAC,KAAK,EAAEI,KAAK,CAACH;IAAM,GAApEG,KAAK,CAACF,GAAG;MAAA;MAAA;MAAA;IAAA,QAA6D;EAAA;IAAA;IAAA;IAAA;EAAA,QACzF;AAEd,CAAC;AAAA,KAlBKR,iBAAiB;AAoBvB,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}