{"ast":null,"code":"var _jsxFileName = \"/Users/thriwax/react-burger/src/components/BurgerIngredients/BurgerIngredients.jsx\";\nimport React from \"react\";\nimport IngredientCard from \"../IngredientCard/IngredientCard\";\nimport { data } from \"../../utils/data.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst bunsImage = data.filter(item => item.type === 'bun').map(item => {\n  item.image;\n});\nconst bunsName = data.filter(item => item.type === 'bun').map(item => {\n  item.name;\n});\nconst bunsPrice = data.filter(item => item.type === 'bun').map(item => {\n  item.price;\n});\nconst sauceImage = data.filter(item => item.type === 'sauce').map(item => {\n  item.image;\n});\nconst sauceName = data.filter(item => item.type === 'sauce').map(item => {\n  item.name;\n});\nconst saucePrice = data.filter(item => item.type === 'sauce').map(item => {\n  item.price;\n});\nconst mainsImage = data.filter(item => item.type === 'main').map(item => {\n  item.image;\n});\n;\nconst mainsName = data.filter(item => item.type === 'main').map(item => {\n  item.name;\n});\nconst mainsPrice = data.filter(item => item.type === 'main').map(item => {\n  item.price;\n});\nconst BurgerIngredients = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text text_type_main-large\",\n      children: \"\\u0421\\u043E\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0431\\u0443\\u0440\\u0433\\u0435\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text text_type_main-medium\",\n      children: \"\\u0411\\u0443\\u043B\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IngredientCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IngredientCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = BurgerIngredients;\nexport default BurgerIngredients;\nvar _c;\n$RefreshReg$(_c, \"BurgerIngredients\");","map":{"version":3,"names":["React","IngredientCard","data","bunsImage","filter","item","type","map","image","bunsName","name","bunsPrice","price","sauceImage","sauceName","saucePrice","mainsImage","mainsName","mainsPrice","BurgerIngredients"],"sources":["/Users/thriwax/react-burger/src/components/BurgerIngredients/BurgerIngredients.jsx"],"sourcesContent":["import React from \"react\";\nimport IngredientCard from \"../IngredientCard/IngredientCard\";\nimport { data } from \"../../utils/data.js\";\n\n\n\nconst bunsImage = data.filter((item) => item.type === 'bun').map(item=>{item.image});\nconst bunsName = data.filter((item) => item.type === 'bun').map(item=>{item.name});\nconst bunsPrice = data.filter((item) => item.type === 'bun').map(item=>{item.price});\n\nconst sauceImage = data.filter((item) => item.type === 'sauce').map(item=>{item.image});\nconst sauceName = data.filter((item) => item.type === 'sauce').map(item=>{item.name});\nconst saucePrice = data.filter((item) => item.type === 'sauce').map(item=>{item.price});\n\n\n\nconst mainsImage = data.filter((item) => item.type === 'main').map(item=>{item.image});;\nconst mainsName = data.filter((item) => item.type === 'main').map(item=>{item.name});\nconst mainsPrice = data.filter((item) => item.type === 'main').map(item=>{item.price});\n\n\nconst BurgerIngredients = () => {\n\n    return (\n        <>\n            <p className=\"text text_type_main-large\">Соберите бургер</p>\n            <p className=\"text text_type_main-medium\">Булки</p>\n            <IngredientCard />\n            <IngredientCard />\n        </>\n    )\n}\n\nexport default BurgerIngredients;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,SAASC,IAAI,QAAQ,qBAAqB;AAAC;AAAA;AAI3C,MAAMC,SAAS,GAAGD,IAAI,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,KAAK,CAAC,CAACC,GAAG,CAACF,IAAI,IAAE;EAACA,IAAI,CAACG,KAAK;AAAA,CAAC,CAAC;AACpF,MAAMC,QAAQ,GAAGP,IAAI,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,KAAK,CAAC,CAACC,GAAG,CAACF,IAAI,IAAE;EAACA,IAAI,CAACK,IAAI;AAAA,CAAC,CAAC;AAClF,MAAMC,SAAS,GAAGT,IAAI,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,KAAK,CAAC,CAACC,GAAG,CAACF,IAAI,IAAE;EAACA,IAAI,CAACO,KAAK;AAAA,CAAC,CAAC;AAEpF,MAAMC,UAAU,GAAGX,IAAI,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC,CAACC,GAAG,CAACF,IAAI,IAAE;EAACA,IAAI,CAACG,KAAK;AAAA,CAAC,CAAC;AACvF,MAAMM,SAAS,GAAGZ,IAAI,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC,CAACC,GAAG,CAACF,IAAI,IAAE;EAACA,IAAI,CAACK,IAAI;AAAA,CAAC,CAAC;AACrF,MAAMK,UAAU,GAAGb,IAAI,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC,CAACC,GAAG,CAACF,IAAI,IAAE;EAACA,IAAI,CAACO,KAAK;AAAA,CAAC,CAAC;AAIvF,MAAMI,UAAU,GAAGd,IAAI,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,MAAM,CAAC,CAACC,GAAG,CAACF,IAAI,IAAE;EAACA,IAAI,CAACG,KAAK;AAAA,CAAC,CAAC;AAAC;AACvF,MAAMS,SAAS,GAAGf,IAAI,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,MAAM,CAAC,CAACC,GAAG,CAACF,IAAI,IAAE;EAACA,IAAI,CAACK,IAAI;AAAA,CAAC,CAAC;AACpF,MAAMQ,UAAU,GAAGhB,IAAI,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,MAAM,CAAC,CAACC,GAAG,CAACF,IAAI,IAAE;EAACA,IAAI,CAACO,KAAK;AAAA,CAAC,CAAC;AAGtF,MAAMO,iBAAiB,GAAG,MAAM;EAE5B,oBACI;IAAA,wBACI;MAAG,SAAS,EAAC,2BAA2B;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAI,eAC5D;MAAG,SAAS,EAAC,4BAA4B;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAI,eACnD,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eAClB,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACnB;AAEX,CAAC;AAAA,KAVKA,iBAAiB;AAYvB,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}