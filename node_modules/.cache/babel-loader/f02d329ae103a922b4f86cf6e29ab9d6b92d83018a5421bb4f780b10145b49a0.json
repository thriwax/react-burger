{"ast":null,"code":"var _jsxFileName = \"/Users/thriwax/Desktop/react-burger/src/components/IngredientCard/IngredientCard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components';\nimport ingredienCard from './IngredientCard.module.css';\nimport Modal from '../Modal/Modal';\nimport propTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport ModalOverlay from '../ModalOverlay/ModalOverlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IngredientCard = _ref => {\n  _s();\n  let {\n    item,\n    setIngredients,\n    ingredients\n  } = _ref;\n  const [open, setOpen] = React.useState(false);\n  const [count, setCount] = React.useState(0);\n  const openCard = () => {\n    setOpen(true);\n  };\n  const add = () => {\n    setCount(count + 1);\n    ingredients === 'burgers' ? setIngredients(item) : setIngredients([...ingredients, item]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [open && /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      item: item,\n      setOpen: setOpen,\n      body: \"ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 35\n    }, this), document.body), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ingredienCard.card,\n      onClick: () => add(),\n      children: [ingredients !== 'burgers' && /*#__PURE__*/_jsxDEV(Counter, {\n        count: ingredients.filter(i => i._id === item._id).length,\n        size: \"default\",\n        extraClass: \"m-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.image,\n        alt: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: ingredienCard.price_container,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text text_type_digits-default\",\n          children: item.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CurrencyIcon, {\n          type: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text text_type_main-small\",\n        onClick: () => openCard(),\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(IngredientCard, \"AEilCQqZM4wscVVfT/BQawxo/0E=\");\n_c = IngredientCard;\nIngredientCard.propTypes = {\n  item: propTypes.object,\n  setIngredients: propTypes.func,\n  buns: propTypes.object\n};\nexport default IngredientCard;\nvar _c;\n$RefreshReg$(_c, \"IngredientCard\");","map":{"version":3,"names":["React","CurrencyIcon","Counter","ingredienCard","Modal","propTypes","createPortal","ModalOverlay","IngredientCard","item","setIngredients","ingredients","open","setOpen","useState","count","setCount","openCard","add","document","body","card","filter","i","_id","length","image","price_container","price","name","object","func","buns"],"sources":["/Users/thriwax/Desktop/react-burger/src/components/IngredientCard/IngredientCard.jsx"],"sourcesContent":["import React from 'react';\nimport { CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components';\nimport ingredienCard from './IngredientCard.module.css';\nimport Modal from '../Modal/Modal';\nimport propTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport ModalOverlay from '../ModalOverlay/ModalOverlay';\n\nconst IngredientCard = ({item, setIngredients, ingredients}) => {\n\n    const [open, setOpen] = React.useState(false)\n\n    const [count, setCount] = React.useState(0)\n\n    const openCard = () => {\n        setOpen(true)\n    }\n\n    const add = () => {\n        setCount(\n            count + 1\n        )\n        ingredients === 'burgers' ? setIngredients(item):setIngredients([...ingredients, item])\n    }\n\n    return (\n        <div>\n            {open && createPortal(<ModalOverlay item={item} setOpen={setOpen} body='ingredients'/>, document.body)}\n            <div className={ingredienCard.card} onClick={() => add()}>\n            {ingredients !== 'burgers' && <Counter count={ingredients.filter((i) => i._id === item._id).length} size=\"default\" extraClass=\"m-1\" />}\n            <img src={item.image} alt='x'/>\n            <div className={ingredienCard.price_container}>\n                <p className=\"text text_type_digits-default\">{item.price}</p>\n                <CurrencyIcon type=\"primary\"/>\n            </div>\n            <p className=\"text text_type_main-small\" onClick={() => openCard()}>{item.name}</p>\n            </div>\n        </div>\n    )\n}\n\nIngredientCard.propTypes = {\n    item: propTypes.object,\n    setIngredients: propTypes.func,\n    buns: propTypes.object,\n}\n\nexport default IngredientCard;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,OAAO,QAAQ,oDAAoD;AAC1F,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,YAAY,QAAQ,WAAW;AACxC,OAAOC,YAAY,MAAM,8BAA8B;AAAC;AAExD,MAAMC,cAAc,GAAG,QAAyC;EAAA;EAAA,IAAxC;IAACC,IAAI;IAAEC,cAAc;IAAEC;EAAW,CAAC;EAEvD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,KAAK,CAACc,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMG,QAAQ,GAAG,MAAM;IACnBJ,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,MAAMK,GAAG,GAAG,MAAM;IACdF,QAAQ,CACJD,KAAK,GAAG,CAAC,CACZ;IACDJ,WAAW,KAAK,SAAS,GAAGD,cAAc,CAACD,IAAI,CAAC,GAACC,cAAc,CAAC,CAAC,GAAGC,WAAW,EAAEF,IAAI,CAAC,CAAC;EAC3F,CAAC;EAED,oBACI;IAAA,WACKG,IAAI,iBAAIN,YAAY,eAAC,QAAC,YAAY;MAAC,IAAI,EAAEG,IAAK;MAAC,OAAO,EAAEI,OAAQ;MAAC,IAAI,EAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAE,EAAEM,QAAQ,CAACC,IAAI,CAAC,eACtG;MAAK,SAAS,EAAEjB,aAAa,CAACkB,IAAK;MAAC,OAAO,EAAE,MAAMH,GAAG,EAAG;MAAA,WACxDP,WAAW,KAAK,SAAS,iBAAI,QAAC,OAAO;QAAC,KAAK,EAAEA,WAAW,CAACW,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKf,IAAI,CAACe,GAAG,CAAC,CAACC,MAAO;QAAC,IAAI,EAAC,SAAS;QAAC,UAAU,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eACtI;QAAK,GAAG,EAAEhB,IAAI,CAACiB,KAAM;QAAC,GAAG,EAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAE,eAC/B;QAAK,SAAS,EAAEvB,aAAa,CAACwB,eAAgB;QAAA,wBAC1C;UAAG,SAAS,EAAC,+BAA+B;UAAA,UAAElB,IAAI,CAACmB;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK,eAC7D,QAAC,YAAY;UAAC,IAAI,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5B,eACN;QAAG,SAAS,EAAC,2BAA2B;QAAC,OAAO,EAAE,MAAMX,QAAQ,EAAG;QAAA,UAAER,IAAI,CAACoB;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7E;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GA/BKrB,cAAc;AAAA,KAAdA,cAAc;AAiCpBA,cAAc,CAACH,SAAS,GAAG;EACvBI,IAAI,EAAEJ,SAAS,CAACyB,MAAM;EACtBpB,cAAc,EAAEL,SAAS,CAAC0B,IAAI;EAC9BC,IAAI,EAAE3B,SAAS,CAACyB;AACpB,CAAC;AAED,eAAetB,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}